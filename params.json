{
  "name": "Zooop-server",
  "tagline": "Sever Side Application ",
  "body": "# Zooop-Server\r\nSever Side Application\r\n<a href=\"http://www.zooop.xyz/\">Zooop</a>\r\n\r\n## Perquisite  Technologies\r\n- Requires an internet connection\r\n- Install `MongoDB`\r\n- Install `Node` and `NPM` (Node comes bundled with NPM)\r\n- Install `GIT`\r\n- Run ` $ npm i -g nodemon gulp-cli` to install and make `gulp` and `nodemon` globally available\r\n- Clone the project `https://github.com/stephenoken/Zooop-Server.git`\r\n\r\n## Run Server Locally\r\n- Run `sudo mongod` or `mongod` to start the mongo server locally\r\n- cd into Zooop-Server and run `npm i` to download project dependancies\r\n- Run `gulp` or either the shell/bash scripts.\r\n\r\n## Deploying Server\r\n- Add a new git remote `heroku` and assign this url `https://git.heroku.com/nameless-escarpment-38075.git`\r\n- Push the master branch of your local copy to the master of the `heroku` remote\r\n\r\n## Development Environment\r\n- Atom Text Editor\r\n- Sublime Text Editor\r\n- Unix Terminal (with zsh)\r\n- ESLint\r\n\r\n## Project Structure\r\nThe structure of the project:\r\n```\r\n.\r\n├── Procfile\r\n├── README.md\r\n├── app\r\n│   ├── controllers\r\n│   │   ├── account.js\r\n│   │   ├── adsController.js\r\n│   │   ├── authentication.js\r\n│   │   ├── client.js\r\n│   │   ├── main.js\r\n│   │   ├── product.js\r\n│   │   └── retailer_product.js\r\n│   ├── helpers\r\n│   │   ├── catalogue.js\r\n│   │   ├── cloud_messaging.js\r\n│   │   ├── diggyBot.js\r\n│   │   ├── master_product_helper.js\r\n│   │   ├── password.js\r\n│   │   └── req_body.js\r\n│   ├── middleware\r\n│   │   └── authentication.js\r\n│   ├── models\r\n│   │   ├── advertisment.js\r\n│   │   ├── client.js\r\n│   │   ├── master_product.js\r\n│   │   ├── retailer_product.js\r\n│   │   ├── schema.js\r\n│   │   └── user.js\r\n│   ├── routes\r\n│   │   ├── advertisement.js\r\n│   │   ├── api.js\r\n│   │   ├── authentication.js\r\n│   │   ├── client.js\r\n│   │   ├── index.js\r\n│   │   └── retailer_product.js\r\n│   └── views\r\n│       ├── addProduct.ejs\r\n│       ├── dashboard.ejs\r\n│       ├── index.ejs\r\n│       └── login.ejs\r\n├── config\r\n│   ├── environments\r\n│   │   ├── development.js\r\n│   │   ├── production.js\r\n│   │   └── test.js\r\n│   ├── index.js\r\n│   ├── models.js\r\n│   ├── mongoose.js\r\n│   ├── passport.js\r\n│   ├── routes.js\r\n│   ├── seed\r\n│   │   ├── data\r\n│   │   │   ├── products.js\r\n│   │   │   └── user.js\r\n│   │   └── seed_data.js\r\n│   └── strategies\r\n│       └── local.js\r\n├── dist\r\n│   ├── images\r\n│   │   ├── Zooop-Logo.svg\r\n│   │   ├── favicon.ico\r\n│   │   └── header.jpg\r\n│   ├── partials\r\n│   │   └── components\r\n│   │       ├── app.html\r\n│   │       ├── create-ad.html\r\n│   │       ├── home.html\r\n│   │       ├── my-ads.html\r\n│   │       ├── purch-advert.html\r\n│   │       └── upload-catalogue.html\r\n│   ├── scripts\r\n│   │   ├── build.js\r\n│   │   ├── build.js.map\r\n│   │   └── vendor.js\r\n│   └── stylesheets\r\n│       ├── dashboard-styles.css\r\n│       ├── index-styles.css\r\n│       └── login-styles.css\r\n├── gulp_tasks\r\n│   ├── browserify.js\r\n│   ├── public_tasks.js\r\n│   ├── server.js\r\n│   └── tests.js\r\n├── gulpfile.js\r\n├── package.json\r\n├── public\r\n│   ├── images\r\n│   │   ├── Zooop-Logo.svg\r\n│   │   ├── favicon.ico\r\n│   │   └── header.jpg\r\n│   ├── partials\r\n│   │   └── components\r\n│   │       ├── app.html\r\n│   │       ├── create-ad.html\r\n│   │       ├── home.html\r\n│   │       ├── my-ads.html\r\n│   │       ├── purch-advert.html\r\n│   │       └── upload-catalogue.html\r\n│   ├── scripts\r\n│   │   ├── app.js\r\n│   │   ├── build.js\r\n│   │   ├── build.js.map\r\n│   │   ├── components\r\n│   │   │   ├── advertisement.js\r\n│   │   │   ├── app.js\r\n│   │   │   ├── createAd.js\r\n│   │   │   ├── home.js\r\n│   │   │   ├── index.js\r\n│   │   │   ├── myAds.js\r\n│   │   │   └── uploadCatalogue.js\r\n│   │   └── controllers\r\n│   │       ├── create_ad.js\r\n│   │       ├── index.js\r\n│   │       ├── my_ads.js\r\n│   │       ├── ui\r\n│   │       │   └── navbar_layout.js\r\n│   │       └── upload_catalogue.js\r\n│   ├── scss\r\n│   │   ├── dashboard\r\n│   │   │   └── base_styles.scss\r\n│   │   ├── index\r\n│   │   │   ├── base_styles.scss\r\n│   │   │   └── material_styles.scss\r\n│   │   └── login\r\n│   │       └── base_styles.scss\r\n│   ├── stylesheets\r\n│   │   └── styles.css\r\n│   └── vendor_scripts\r\n│       ├── cbpAnimatedHeader.js\r\n│       ├── classie.js\r\n│       └── creative.js\r\n├── server.js\r\n├── tests\r\n│   └── server\r\n│       ├── fixtures\r\n│       │   ├── advertisements.js\r\n│       │   ├── clients.js\r\n│       │   ├── routes_test_data.js\r\n│       │   ├── sample_catalogue.txt\r\n│       │   └── users.js\r\n│       ├── integration\r\n│       │   ├── advertisements.js\r\n│       │   ├── api_routes.js\r\n│       │   ├── authentication.js\r\n│       │   ├── client.js\r\n│       │   ├── discover_product_api.js\r\n│       │   └── index_routes.js\r\n│       └── unit_tests\r\n│           ├── diggyBotTests.js\r\n│           ├── helpers\r\n│           │   ├── account.js\r\n│           │   ├── catalogue.js\r\n│           │   └── password.js\r\n│           └── models\r\n│               ├── advertisement.js\r\n│               └── client.js\r\n├── unix_deploy.sh\r\n└── windowDeploy.bat\r\n```\r\n<i>The file structure was created using `tree -I 'node_modules'`</i>\r\n\r\n#### Gulpfile.js\r\n- Build system for automating tasks\r\n- Any tasks that you want to be run by default can be called here\r\n- Any new tasks should be put into their own file and placed in the `gulp_tasks` folder.\r\n\r\n#### Public\r\n- Contains all the static resources that are available to the client. Including the angular component  \r\n\r\n#### Dist\r\n- All the processed resources are to be deposited here.\r\n\r\n#### App\r\n- Contains all the code that runs on the server side\r\n\r\n#### App/Routes\r\n- All routes that are to be made available should be placed here\r\n\r\n#### App/Views\r\n- Files are are dynamically rendered using EJS before being sent to the client.\r\n\r\n#### App/Helpers\r\n- Contains provides the business logic\r\n\r\n#### App/Models\r\n- Contains the schemas for the mongoDB and the custom queries\r\n\r\n#### Config\r\n- Contains the configuration for the server. Depending on the environment the server will load different configurations eg. connecting to a different mongoDB\r\n\r\n#### Tests\r\n- Tests for both the server and client should be placed here.\r\n- The testing libraries being uses are:\r\n  - Mocha\r\n  - Chai\r\n\r\n\r\n#### Server.js\r\n- Main hook for initialising our application\r\n\r\n## Project Dependancies\r\n- <a href=\"http://expressjs.com/\">ExpressJS</a>\r\n- <a href=\"http://gulpjs.com/\">Gulp.js</a>\r\n- <a href=\"https://mochajs.org/\">Mocha</a>\r\n- <a href=\"http://chaijs.com/\">Chai</a>\r\n- <a href=\"https://www.npmjs.com/\">NpmJS</a>\r\n- <a href=\"http://www.embeddedjs.com/\">EJS (.ejs)</a>\r\n- <a href=\"https://angularjs.org/\">AngularJS (1.5.x)</a>\r\n- <a href=\"https://material.angularjs.org/latest/\">Angular Material</a>\r\n- <a href=\"http://www.getmdl.io/\">MDL</a>\r\n- <a href=\"https://www.browsersync.io/\">BrowserSync</a>\r\n\r\n## BrowserSync\r\n- This allows you to perform live reloading of the public resources and html files.\r\n\r\n## Interesting Articles\r\n- Testing <a href=\"http://mherman.org/blog/2015/09/10/testing-node-js-with-mocha-and-chai/#.VqvXA7CLSHo\">Express</a>\r\n- <a href=\"http://www.cyberciti.biz/tips/nohup-execute-commands-after-you-exit-from-a-shell-prompt.html\">Ubuntu VM stuff</a>\r\n- <a href=\"http://www.restapitutorial.com/lessons/httpmethods.html\">Restful Methods</a>\r\n\r\n\r\n### Schema Information\r\n- Product schema is the master collection for every product\r\n- Discover Product is schema is for the products maintained in various collections based on their origin/ethnicity\r\n\r\n## Quirks with the build\r\n- If you've got tabs in your browser pointing to localhost:3000, close them when your finished as they keep trying to connect to port 5001\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}